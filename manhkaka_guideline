I. Account_01_RegisterAndLogin_StepByStep
-> không che dấu đối tượng

II. [Online 10] - Topic 20 (POM 02 - Build Selenium Wrapper API/ Apply AbstractPage)
-> không che dấu đối tượng
Project Structure

AbstractPage: Những hàm dùng chung cho tầng page Object
AbstractTest: Những hàm dùng cho cho tầng testcases
Constants: Dữ liệu dùng chung cho toàn bộ dự án
LoginPageObject: Sự kiện, hành động của Login Page

Builtin keyword
- Ctrl + D: Xóa dòng/ khối lệnh 
- Ctrl + Shift + F: Format dòng khối lệnh
- Ctrl + Shift + O: Import/ remove thư viện 
- F3: Đi vào trong hàm/ biến
o Ctrl + Shift + c: Comment/ Uncomment dòng/ khối lệnh
o Ctrl + Shift +/: Comment
o Ctrl + Shift +\: Uncomment 
o Ctrl + Space: Suggest code 
o Alt + (mũi tên lên xuống): Move 1 dòng/ khối lệnh lên hoặc xuống
• Ctrl + (phím - hoặc phím +): giảm hoặc tăng font chữ
• User Define keyword: Windows > Preferences > General > Keys

Wrapper API: như sendKeys dùng rất nhiều lần

III. Use AbstractPage class
- cach 1: Import + Init AbstractPage class
	+ Phai khai bao
	+ Phai khoi tao
	+ Phai thong qua instance cua class AbstractPage
- cach 2: Extends AbstractPage
	+ 1 trong những nguyên tắc của OOP:
		- Tính kế thừa
		- Tính đa hình
		- Tính trừu tượng
	+ Khong can khai bao
	+ Khong can khoi tao
	+ Khong phai thong qua instance - dung truc tiep
	
driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);//deprecated in selenium 4
driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(5));

VI. [Online 10] - Topic 24 (POM 06 - PageFactorySelenium and PageGeneratorManager)
1. pageFactory kieu thuong:
- Account_04_RegisterAndLogin_Selenium_PageFactory
- Kieu thuong (Page Object + Split Locator (interface/class rieng)): cac bai truoc
2. Kieu page Factory (Page Object + Page Factory): Thay vi de toan bo Locators ben ngoai (1 class rieng), 
	thi nhet het toan bo vao trong xxxPageFactory.java
	- Khi so lượng TCs nhiều, sẽ khó quản lý
	- Nếu thử tách UI (@FindBy) ra sẽ không khởi tạo được PageFactory.initElements(driver, this);
	- Khó sử dụng Dynamic Locator (Xpath), de nhet bien tu ben ngoai vao
-> ko khuyen khich dung PageFactory cua Selenium

- FindBy/FindBys/FindAll can phan biet

POM nguyên lý:
1. Kế thừa 
ex: LoginPageObject extends AbstractPage

2. Đóng gói, Che dấu dữ liệu (wrapper)
Account_01_RegisterAndLogin -> ko che dấu
Account_02_RegisterAndLogin -> ko che dấu
Đưa dữ liệu về tầng Page Object để che dấu

- khi đóng gói thì ko được phép thấy hàm khởi tạo trên tầng TC
	+ ex: Account_05_RegisterAndLogin_PageGenerator có chứa loginPage = new LoginPageObject(driver); thì cần đưa tới tầng Page Object
- hàm nào có sự chuyển page => đưa việc khởi tạo vào hàm đó
	+ ex:
		loginPage.clickToHereLink();
		//Sau khi click Here Link => Khoi tao Register Page
		registerPage = new RegisterPageObject(driver);
		=> thì sẽ chuyển hàm clickToHereLink() trong LoginPageObject để thêm return và chuyển void
		
		public void clickToHereLink() {
		//way1: Page Object
		waitForElementVisible(driver, LoginPageUI.HERE_LINK);
		clickToElement(driver, LoginPageUI.HERE_LINK);
		}
		
		public void clickToHereLink() {
		//way1: Page Object
		waitForElementVisible(driver, LoginPageUI.HERE_LINK);
		clickToElement(driver, LoginPageUI.HERE_LINK);
		}
3. Tính đa hình
Qua bài Dynamic Locators mới dùng

Page Generator: Quản lý việc khởi tạo page, thay vì return new Login/Home/RegisterPageObject(driver) quá nhiều
đưa hết việc khởi tạo vào Page Generator


VII. //[Online 10] - Topic 26 (POM 08 - WebDriver Life Cycle/ Action Chain)
//Cach cu: 14 pages x 13 (di toi 13 pages khac)
//Do do can viet common functions tai AbstractPage vaf AbstractPageUI de open Page Object
//Tối ưu level 1: chỉ cần viết 1 PageGeneratorManager

VIII. //[Online 10] - Topic 27 (POM 09 - Dynamic Locator and Rest Parameters)
//https://www.youtube.com/watch?v=epxoAXZ4QeA
Static = chia sẻ data/state xuyên suốt hệ thống, nên dùng chung cho toàn bộ System
//Tối ưu level 2: 15 hàm trong AbstractPage.java

public void waitForElementVisible(WebDriver driver, WebElement element) -> ko dung duoc do tham so la WebElement, va dang dung String.format(locator, (Object[]) values);
public void waitForElementVisible(WebDriver driver, String locator, String... values) { -> dung duoc

VI. [Online 10] - Topic 29 (POM 11 - Assert/ Verify/ Log/ Report HTML)
Có 3 mode logs
- Log ra console trong quá trình chạy để theo dõi
- Log vào file để tracking
- Log vào Report